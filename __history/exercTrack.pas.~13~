unit exercTrack;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.WinXCalendars, Vcl.StdCtrls,
  Vcl.Grids, Vcl.ExtCtrls, Vcl.Imaging.pngimage, System.Math, globalUnit, exercEnterDaily;

type
  Tform_exercTrack = class(TForm)
    lbl_goal: TLabel;
    lbl_displaygoal: TLabel;
    shp_displayGoal: TShape;
    lbl_showdata: TLabel;
    lbl_showOneDay: TLabel;
    lbl_viewManyError: TLabel;
    img_qu: TImage;
    Panel1: TPanel;
    img_icon: TImage;
    lbl_exercTracker: TLabel;
    lbl_back: TLabel;
    cbo_selectView: TComboBox;
    cbo_days: TComboBox;
    stg_viewMany: TStringGrid;
    stg_viewOne: TStringGrid;
    mmo_help: TMemo;
    cdr_selectDate: TCalendarView;
    lbl_viewOneError: TLabel;
    procedure FormCreate(Sender: TObject);
    procedure cbo_selectViewChange(Sender: TObject);
    procedure cdr_selectDateChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  form_exercTrack: Tform_exercTrack;

implementation

{$R *.dfm}

procedure Tform_exercTrack.cbo_selectViewChange(Sender: TObject);
begin
if cbo_selectView.ItemIndex= 0 then  //if on option 'enter today's data'
  begin
  form_exercTrack.Hide; //hide the current form
  form_exercEnterDaily.show; //show the data entry form
  form_exercEnterDaily.lbl_displaygoal.Caption:= getGoal('sleep') + ' hours'; //display goal
  form_exercEnterDaily.lbl_date.Caption:= ' Todays date is ' + datetostr(date); //display date
  form_exercEnterDaily.lbl_displaybmi.caption:= floattostr(roundto(getBMI,-1)); //display BMI
  if isTodayRecorded('exerc') = TRUE then  //if data has been recorded today
    begin
    form_exercEnterDaily.edt_input.ReadOnly:=TRUE; //make edit box read only
    form_exercEnterDaily.edt_input.Text:= 'Todays data has been recorded';  //display message
    form_exercEnterDaily.edt_input.Font.Style:=[fsBold]; //change font to bold
    form_exercEnterDaily.btn_submit.Hide; //hide the submit button
    end;
  end;
end;

procedure Tform_exercTrack.cdr_selectDateChange(Sender: TObject);
var exercData: TStringList;
    path: string;
    fileLength, index:integer;
begin
stg_viewOne.Rows[0].Clear; //clearing previous data from the grid
lbl_viewManyError.Hide; //hiding previous error messages
lbl_viewOneError.Hide;  //hiding previous error messages
path:= currentDir + '\' + 'exercProgress.txt'; //exercProgress filepath
exercData:=TStringList.Create; //creating a stringList to hold all the data in exercProgress
  exercData.LoadFromFile(path); //loading the exercProgress data into stringList exercData
  fileLength:= exercData.Count; //number of records
  index:= searchDate(exercData, cdr_selectDate.Date, 1, (fileLength-1)); //calling searchDate, returning the date's index
  if (index = -1) then  //date not found
    begin
    lbl_viewOneError.Show; //show error message
    lbl_viewOneError.Caption:= 'There is no data recorded for '+ #13#10+ datetostr(cdr_selectDate.Date)+'.'; //error message
    end
  else
    begin
     stg_viewOne.Cells[0,0]:= datetostr(cdr_selectDate.Date); //outputting date on grid
     stg_viewOne.Cells[1,0]:= exercData[index+1] + ' hours'; //outputting the date's data
    end;
exercData.Free;
end;

procedure Tform_exercTrack.FormCreate(Sender: TObject);
begin
cbo_selectView.ItemIndex:=0; //setting default index
cbo_days.ItemHeight:= 0;  //setting default index
lbl_viewManyError.Hide; //hiding the error message
mmo_help.Hide;
end;

end.
